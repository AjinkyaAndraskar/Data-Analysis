####### CREATING TABLE #########

drop table if exists goldusers_signup;
CREATE TABLE goldusers_signup(userid integer,gold_signup_date date); 

INSERT INTO goldusers_signup(userid,gold_signup_date) 
 VALUES (1,'09-22-2017'),
(3,'04-21-2017');

drop table if exists users;
CREATE TABLE users(userid integer,signup_date date); 

INSERT INTO users(userid,signup_date) 
 VALUES (1,'09-02-2014'),
(2,'01-15-2015'),
(3,'04-11-2014');

drop table if exists sales;
CREATE TABLE sales(userid integer,created_date date,product_id integer); 

INSERT INTO sales(userid,created_date,product_id) 
 VALUES (1,'04-19-2017',2),
(3,'12-18-2019',1),
(2,'07-20-2020',3),
(1,'10-23-2019',2),
(1,'03-19-2018',3),
(3,'12-20-2016',2),
(1,'11-09-2016',1),
(1,'05-20-2016',3),
(2,'09-24-2017',1),
(1,'03-11-2017',2),
(1,'03-11-2016',1),
(3,'11-10-2016',1),
(3,'12-07-2017',2),
(3,'12-15-2016',2),
(2,'11-08-2017',2),
(2,'09-10-2018',3);


drop table if exists product;
CREATE TABLE product(product_id integer,product_name text,price integer); 

INSERT INTO product(product_id,product_name,price) 
 VALUES
(1,'p1',980),
(2,'p2',870),
(3,'p3',330);


------------- ANALYSIS ------------

** What is the total amount each customer spent on zomato?

select 
  a.userid, 
  sum(b.price) total_amt_spent 
from 
  sales a 
  inner join product b on a.product_id = b.product_id 
group by 
  a.userid;

** How many days has each customer visited zomato? 

select 
  userid, 
  count(distinct created_date) distinct_days 
from 
  sales 
group by 
  userid;

** What was the first product purchased by each customer?
select 
  * 
from 
  (
    select 
      *, 
      rank() over (
        partition by userid 
        order by 
          created_date
      ) rnk 
    from 
      sales
  ) a 
where 
  rnk = 1;

** What is the most purchased item on the menu & how many times was it purchased by all customers?
select 
  userid, 
  count(product_id) cnt 
from 
  sales 
where 
  product_id = (
    select 
      top 1 product_id 
    from 
      sales 
    group by 
      product_id 
    order by 
      count(product_id) desc
  ) 
group by 
  userid;

** Which item was most popular for each customer?
select 
  * 
from 
  (
    select 
      *, 
      rank() over(
        partition by userid 
        order by 
          cnt desc
      ) rnk 
    from 
      (
        select 
          userid, 
          product_id, 
          count(product_id) cnt 
        from 
          sales 
        group by 
          userid, 
          product_id
      ) a
  ) b 
where 
  rnk = 1;

** Which item was purchased first by customers after they become a member?
SELECT *
FROM   (SELECT c.*,
               Rank()
                 OVER (
                   partition BY userid
                   ORDER BY created_date ) rnk
        FROM   (SELECT a.userid,
                       a.created_date,
                       a.product_id,
                       b.gold_signup_date
                FROM   sales a
                       INNER JOIN goldusers_signup b
                               ON a.userid = b.userid
                                  AND created_date >= gold_signup_date) c)d
WHERE  rnk = 1; 

** Which item was purchased just before the customer became a member?
SELECT *
FROM   (SELECT c.*,
               Rank()
                 OVER (
                   partition BY userid
                   ORDER BY created_date DESC ) rnk
        FROM   (SELECT a.userid,
                       a.created_date,
                       a.product_id,
                       b.gold_signup_date
                FROM   sales a
                       INNER JOIN goldusers_signup b
                               ON a.userid = b.userid
                                  AND created_date <= gold_signup_date) c)d
WHERE  rnk = 1; 

** What are the total orders and amount spent for each member before they become a member?
SELECT userid,
       Count(created_date) order_purchased,
       Sum(price)          total_amt_spent
FROM   (SELECT c.*,
               d.price
        FROM   (SELECT a.userid,
                       a.created_date,
                       a.product_id,
                       b.gold_signup_date
                FROM   sales a
                       INNER JOIN goldusers_signup b
                               ON a.userid = b.userid
                                  AND created_date <= gold_signup_date) c
               INNER JOIN product d
                       ON c.product_id = d.product_id)e
GROUP  BY userid; 

** Rnk all transactions of the customers
SELECT*,
      Rank()
        OVER (
          partition BY userid
          ORDER BY created_date ) rnk
FROM   sales; 

** Rank all transactions for each member whenever they are zomato gold members for every nongold member transaction marked as NA

SELECT e.*,
       CASE
         WHEN rnk = 0 THEN 'na'
         ELSE rnk
       END AS rnkk
FROM   (SELECT c.*,
               Cast(( CASE
                        WHEN gold_signup_date IS NULL THEN 0
                        ELSE Rank()
                               OVER (
                                 partition BY userid
                                 ORDER BY created_date DESC)
                      END ) AS VARCHAR) AS rnk
        FROM   (SELECT a.userid,
                       a.created_date,
                       a.product_id,
                       b.gold_signup_date
                FROM   sales a
                       LEFT JOIN goldusers_signup b
                              ON a.userid = b.userid
                                 AND created_date >= gold_signup_date)c)e; 
